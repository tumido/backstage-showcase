app:
  title: Janus IDP Backstage Showcase
  baseUrl: http://localhost:3000
  analytics:
    segment:
      testMode: true
      writeKey: temp

organization:
  name: My Org

backend:
  auth:
    keys:
      - secret: temp
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src:
      - "'self'"
      - 'http:'
      - 'https:'
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'

proxy:
  skipInvalidProxies: true
  endpoints: {}

integrations:
  github:
    - host: github.com
      # This is a GitHub App. You can find out how to generate this file, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/integrations/github/github-apps
      apps:
        - appId: 1
          webhookUrl: temp
          clientId: temp
          clientSecret: temp
          webhookSecret: temp
          privateKey: |
            temp

  bitbucketServer:
    - host: bitbucket.com
      apiBaseUrl: temp
      username: temp
      password: temp
  gitlab:
    - host: gitlab.com
      token: temp

argocd:
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: argoInstance1
          url: temp
          token: temp
        - name: argoInstance2
          url: temp
          token: temp

auth:
  environment: development
  providers:
    github:
      development:
        clientId: temp
        clientSecret: temp

techdocs:
  builder: external
  generator:
    runIn: local
  publisher:
    type: awsS3

lighthouse:
  baseUrl: temp

dynatrace:
  baseUrl: temp

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, Group, Resource, Location, Template, API]
  locations:
    # Note: integrations.github[].apps must be correctly configured to read GitHub locations
    - type: file
      target: ../../catalog-entities/all.yaml


dynamicPlugins:
  frontend:
    backstage.plugin-azure-devops:
      mountPoints:
        - mountPoint: entity.page.ci/cards
          importName: EntityAzurePipelinesContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isAzureDevOpsAvailable
        - mountPoint: entity.page.pull-requests/cards
          importName: EntityAzurePullRequestsContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isAzureDevOpsAvailable
    backstage.plugin-dynatrace:
      mountPoints:
        - mountPoint: entity.page.monitoring/cards
          importName: DynatraceTab
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isDynatraceAvailable
    backstage.plugin-github-actions:
      mountPoints:
        - mountPoint: entity.page.ci/cards
          importName: EntityGithubActionsContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isGithubActionsAvailable
    backstage.plugin-github-issues:
      mountPoints:
        - mountPoint: entity.page.issues/cards
          importName: GithubIssuesCard
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - hasAnnotation: github.com/project-slug
    backstage.plugin-jenkins:
      mountPoints:
        - mountPoint: entity.page.ci/cards
          importName: EntityJenkinsContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isJenkinsAvailable
    backstage.plugin-kubernetes:
      mountPoints:
        - mountPoint: entity.page.kubernetes/cards
          importName: EntityKubernetesContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              anyOf:
                - hasAnnotation: backstage.io/kubernetes-id
                - hasAnnotation: backstage.io/kubernetes-namespace
    backstage.plugin-lighthouse:
      dynamicRoutes:
        - path: /lighthouse
          importName: LighthousePage
          menuItem:
            icon: Assessment
            text: Lighthouse
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityLastLighthouseAuditCard
          config:
            layout:
              gridColumnEnd: "span 6"
            if:
              allOf:
                - isLighthouseAvailable
    backstage.plugin-pagerduty:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityPagerDutyCard
          config:
            layout:
              gridColumnEnd: "span 6"
            if:
              allOf:
                - isPluginApplicableToEntity
    backstage.plugin-sonarqube:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntitySonarQubeCard
          config:
            layout:
              gridColumnStart: "span 4"
              gridRowEnd: "span 2"
            if:
              allOf:
                - isSonarQubeAvailable
    immobiliarelabs.backstage-plugin-gitlab:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityGitlabMergeRequestStatsCard
          config:
            layout:
              gridRowEnd: "span 2"
              gridColumnStart: "span 4"
            if:
              allOf:
                - isGitlabAvailable
        - mountPoint: entity.page.ci/cards
          importName: EntityGitlabPipelinesTable
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isGitlabAvailable
        - mountPoint: entity.page.issues/cards
          importName: EntityGitlabIssuesTable
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isGitlabAvailable
        - mountPoint: entity.page.pull-requests/cards
          importName: EntityGitlabMergeRequestsTable
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isGitlabAvailable
    janus-idp.backstage-plugin-jfrog-artifactory:
      mountPoints:
        - mountPoint: entity.page.image-registry/cards
          importName: JfrogArtifactoryPage
          config:
            layout:
              gridColumn: 1 / -1
            if:
              anyOf:
              - isJfrogArtifactoryAvailable
    janus-idp.backstage-plugin-nexus-repository-manager:
      mountPoints:
        - mountPoint: entity.page.image-registry/cards
          importName: NexusRepositoryManagerPage
          config:
            layout:
              gridColumn: 1 / -1
            if:
              anyOf:
              - isNexusRepositoryManagerAvailable
    janus-idp.backstage-plugin-ocm:
      dynamicRoutes:
        - path: /ocm
          importName: OcmPage
          menuItem:
            icon: Storage
            text: Clusters
      mountPoints:
        - mountPoint: entity.page.overview/context
          importName: ClusterContextProvider
        - mountPoint: entity.page.overview/cards
          importName: ClusterAvailableResourceCard
          config:
            layout:
              gridRowStart: 1
              gridColumnStart: "span 1"
            if:
              anyOf:
              - isKind: resource
              - isType: kubernetes-cluster
        - mountPoint: entity.page.overview/cards
          importName: ClusterInfoCard
          config:
            if:
              allOf:
              - isKind: resource
              - isType: kubernetes-cluster
    janus-idp.backstage-plugin-quay:
      mountPoints:
        - mountPoint: entity.page.image-registry/cards
          importName: QuayPage
          config:
            layout:
              gridColumn: 1 / -1
            if:
              anyOf:
              - isQuayAvailable
    janus-idp.backstage-plugin-tekton:
      mountPoints:
        - mountPoint: entity.page.ci/cards
          importName: TektonCI
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isTektonCIAvailable
    janus-idp.backstage-plugin-topology:
      mountPoints:
        - mountPoint: entity.page.topology/cards
          importName: TopologyPage
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              anyOf:
                - hasAnnotation: backstage.io/kubernetes-id
                - hasAnnotation: backstage.io/kubernetes-namespace
    roadiehq.backstage-plugin-argo-cd:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityArgoCDOverviewCard
          config:
            layout:
              gridColumn: "1 / span 8"
            if:
              allOf:
                - isArgocdAvailable
        - mountPoint: entity.page.cd/cards
          importName: EntityArgoCDHistoryCard
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isArgocdAvailable
    roadiehq.backstage-plugin-datadog:
      mountPoints:
        - mountPoint: entity.page.monitoring/cards
          importName: EntityDatadogContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isDatadogAvailable
    roadiehq.backstage-plugin-github-insights:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityGithubInsightsComplianceCard
          config:
            layout:
              gridRowEnd: "span 2"
              gridColumnStart: "span 4"
            if:
              allOf:
                - isGithubInsightsAvailable
    roadiehq.backstage-plugin-github-pull-requests:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityGithubPullRequestsOverviewCard
          config:
            layout:
              gridRow: "1 / span 2"
              gridColumn: "5 / span 4"
            if:
              allOf:
                - isGithubPullRequestsAvailable
        - mountPoint: entity.page.pull-requests/cards
          importName: EntityGithubPullRequestsContent
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isGithubPullRequestsAvailable
    roadiehq.backstage-plugin-jira:
      mountPoints:
        - mountPoint: entity.page.issues/cards
          importName: EntityJiraOverviewCard
          config:
            layout:
              gridColumn: "1 / -1"
            if:
              allOf:
                - isJiraAvailable
    roadiehq.backstage-plugin-security-insights:
      mountPoints:
        - mountPoint: entity.page.overview/cards
          importName: EntityDependabotAlertsCard
          config:
            layout:
              gridRowEnd: "span 2"
              gridColumnStart: "span 4"
            if:
              allOf:
                - isSecurityInsightsAvailable
